// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2022_2C_I_AgendaTurnos.Data;

#nullable disable

namespace _2022_2C_I_AgendaTurnos.Migrations
{
    [DbContext(typeof(AgendaContext))]
    [Migration("20221110003843_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_2022_2C_I_AgendaTurnos.Models.Paciente", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaciente"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaAlta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObraSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrestacionIdPrestacion")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdPaciente");

                    b.HasIndex("PrestacionIdPrestacion");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("_2022_2C_I_AgendaTurnos.Models.Prestacion", b =>
                {
                    b.Property<int>("IdPrestacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrestacion"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Duracion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasKey("IdPrestacion");

                    b.ToTable("Prestaciones");
                });

            modelBuilder.Entity("_2022_2C_I_AgendaTurnos.Models.Profesional", b =>
                {
                    b.Property<int>("IdProfesional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProfesional"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaAlta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdProfesional");

                    b.ToTable("Profesionales");
                });

            modelBuilder.Entity("_2022_2C_I_AgendaTurnos.Models.Turno", b =>
                {
                    b.Property<int>("IdTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTurno"), 1L, 1);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("Confirmado")
                        .HasColumnType("bit");

                    b.Property<string>("DescripcionCancel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fecha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaAlta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("ProfesionalId")
                        .HasColumnType("int");

                    b.HasKey("IdTurno");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProfesionalId");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("PrestacionProfesional", b =>
                {
                    b.Property<int>("PrestacionesIdPrestacion")
                        .HasColumnType("int");

                    b.Property<int>("ProfesionalesIdProfesional")
                        .HasColumnType("int");

                    b.HasKey("PrestacionesIdPrestacion", "ProfesionalesIdProfesional");

                    b.HasIndex("ProfesionalesIdProfesional");

                    b.ToTable("PrestacionProfesional");
                });

            modelBuilder.Entity("_2022_2C_I_AgendaTurnos.Models.Paciente", b =>
                {
                    b.HasOne("_2022_2C_I_AgendaTurnos.Models.Prestacion", null)
                        .WithMany("Pacientes")
                        .HasForeignKey("PrestacionIdPrestacion");
                });

            modelBuilder.Entity("_2022_2C_I_AgendaTurnos.Models.Turno", b =>
                {
                    b.HasOne("_2022_2C_I_AgendaTurnos.Models.Paciente", "Paciente")
                        .WithMany("Turnos")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2022_2C_I_AgendaTurnos.Models.Profesional", "Profesional")
                        .WithMany("Turnos")
                        .HasForeignKey("ProfesionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Profesional");
                });

            modelBuilder.Entity("PrestacionProfesional", b =>
                {
                    b.HasOne("_2022_2C_I_AgendaTurnos.Models.Prestacion", null)
                        .WithMany()
                        .HasForeignKey("PrestacionesIdPrestacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2022_2C_I_AgendaTurnos.Models.Profesional", null)
                        .WithMany()
                        .HasForeignKey("ProfesionalesIdProfesional")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_2022_2C_I_AgendaTurnos.Models.Paciente", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("_2022_2C_I_AgendaTurnos.Models.Prestacion", b =>
                {
                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("_2022_2C_I_AgendaTurnos.Models.Profesional", b =>
                {
                    b.Navigation("Turnos");
                });
#pragma warning restore 612, 618
        }
    }
}
